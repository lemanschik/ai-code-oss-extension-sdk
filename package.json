{
	"name": "claude-dev",
	"displayName": "Cline",
	"description": "Autonomous coding agent right in your IDE, capable of creating/editing files, running commands, using the browser, and more with your permission every step of the way.",
	"version": "3.20.8",
	"icon": "assets/icons/icon.png",
	"engines": {
		"vscode": "^1.84.0"
	},
	"author": {
		"name": "Cline Bot Inc."
	},
	"license": "Apache-2.0",
	"publisher": "saoudrizwan",
	"repository": {
		"type": "git",
		"url": "https://github.com/cline/cline"
	},
	"homepage": "https://cline.bot",
	"categories": [
		"AI",
		"Chat",
		"Programming Languages",
		"Education",
		"Snippets",
		"Testing"
	],
	"keywords": [
		"cline",
		"claude",
		"dev",
		"mcp",
		"openrouter",
		"coding",
		"agent",
		"autonomous",
		"chatgpt",
		"sonnet",
		"ai",
		"llama"
	],
	"activationEvents": [
		"onLanguage",
		"onStartupFinished",
		"workspaceContains:evals.env"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"walkthroughs": [
			{
				"id": "ClineWalkthrough",
				"title": "Meet Cline, your new coding partner",
				"description": "Cline codes like a developer because it thinks like one. Here are 5 ways to put it to work:",
				"steps": [
					{
						"id": "welcome",
						"title": "Start with a Goal, Not Just a Prompt",
						"description": "Tell Cline what you want to achieve. It plans, asks, and then codes, like a true partner.",
						"media": {
							"markdown": "walkthrough/step1.md"
						}
					},
					{
						"id": "learn",
						"title": "Let Cline Learn Your Codebase",
						"description": "Point Cline to your project. It builds understanding to make smart, context-aware changes.",
						"media": {
							"markdown": "walkthrough/step2.md"
						}
					},
					{
						"id": "advanced-features",
						"title": "Always Use the Best AI Models",
						"description": "Cline empowers you with State-of-the-Art AI, connecting to top models (Anthropic, Gemini, OpenAI & more).",
						"media": {
							"markdown": "walkthrough/step3.md"
						}
					},
					{
						"id": "mcp",
						"title": "Extend with Powerful Tools (MCP)",
						"description": "Connect to databases, APIs, or discover new capabilities in the MCP Marketplace.",
						"media": {
							"markdown": "walkthrough/step4.md"
						}
					},
					{
						"id": "getting-started",
						"title": "You're Always in Control",
						"description": "Review Cline's plans and diffs. Approve changes before they happen. No surprises.",
						"media": {
							"markdown": "walkthrough/step5.md"
						},
						"content": {
							"path": "walkthrough/step5.md"
						}
					}
				]
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "claude-dev-ActivityBar",
					"title": "Cline (âŒ˜+')",
					"icon": "assets/icons/icon.svg",
					"when": "isMac"
				},
				{
					"id": "claude-dev-ActivityBar",
					"title": "Cline (Ctrl+')",
					"icon": "assets/icons/icon.svg",
					"when": "!isMac"
				}
			]
		},
		"views": {
			"claude-dev-ActivityBar": [
				{
					"type": "webview",
					"id": "claude-dev.SidebarProvider",
					"name": "",
					"icon": "assets/icons/icon.svg"
				}
			]
		},
		"commands": [
			{
				"command": "cline.plusButtonClicked",
				"title": "New Task",
				"icon": "$(add)"
			},
			{
				"command": "cline.mcpButtonClicked",
				"title": "MCP Servers",
				"icon": "$(server)"
			},
			{
				"command": "cline.historyButtonClicked",
				"title": "History",
				"icon": "$(history)"
			},
			{
				"command": "cline.popoutButtonClicked",
				"title": "Open in Editor",
				"icon": "$(link-external)"
			},
			{
				"command": "cline.accountButtonClicked",
				"title": "Account",
				"icon": "$(account)"
			},
			{
				"command": "cline.settingsButtonClicked",
				"title": "Settings",
				"icon": "$(settings-gear)"
			},
			{
				"command": "cline.openInNewTab",
				"title": "Open In New Tab",
				"category": "Cline"
			},
			{
				"command": "cline.dev.createTestTasks",
				"title": "Create Test Tasks",
				"category": "Cline",
				"when": "cline.isDevMode"
			},
			{
				"command": "cline.addToChat",
				"title": "Add to Cline",
				"category": "Cline"
			},
			{
				"command": "cline.addTerminalOutputToChat",
				"title": "Add to Cline",
				"category": "Cline"
			},
			{
				"command": "cline.focusChatInput",
				"title": "Jump to Chat Input",
				"category": "Cline"
			},
			{
				"command": "cline.generateGitCommitMessage",
				"title": "Generate Commit Message with Cline",
				"category": "Cline",
				"icon": "$(robot)"
			},
			{
				"command": "cline.abortGitCommitMessage",
				"title": "Generate Commit Message with Cline - Stop",
				"category": "Cline",
				"icon": "$(debug-stop)"
			},
			{
				"command": "cline.explainCode",
				"title": "Explain with Cline",
				"category": "Cline"
			},
			{
				"command": "cline.improveCode",
				"title": "Improve with Cline",
				"category": "Cline"
			},
			{
				"command": "cline.openWalkthrough",
				"title": "Open Walkthrough",
				"category": "Cline"
			}
		],
		"keybindings": [
			{
				"command": "cline.addToChat",
				"key": "cmd+'",
				"mac": "cmd+'",
				"win": "ctrl+'",
				"linux": "ctrl+'",
				"when": "editorHasSelection"
			},
			{
				"command": "cline.generateGitCommitMessage",
				"when": "config.git.enabled && scmProvider == git"
			},
			{
				"command": "cline.focusChatInput",
				"key": "cmd+'",
				"mac": "cmd+'",
				"win": "ctrl+'",
				"linux": "ctrl+'",
				"when": "!editorHasSelection"
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "cline.plusButtonClicked",
					"group": "navigation@1",
					"when": "view == claude-dev.SidebarProvider"
				},
				{
					"command": "cline.mcpButtonClicked",
					"group": "navigation@2",
					"when": "view == claude-dev.SidebarProvider"
				},
				{
					"command": "cline.historyButtonClicked",
					"group": "navigation@3",
					"when": "view == claude-dev.SidebarProvider"
				},
				{
					"command": "cline.popoutButtonClicked",
					"group": "navigation@4",
					"when": "view == claude-dev.SidebarProvider"
				},
				{
					"command": "cline.accountButtonClicked",
					"group": "navigation@5",
					"when": "view == claude-dev.SidebarProvider"
				},
				{
					"command": "cline.settingsButtonClicked",
					"group": "navigation@6",
					"when": "view == claude-dev.SidebarProvider"
				}
			],
			"editor/title": [
				{
					"command": "cline.plusButtonClicked",
					"group": "navigation@1",
					"when": "activeWebviewPanelId == claude-dev.TabPanelProvider"
				},
				{
					"command": "cline.mcpButtonClicked",
					"group": "navigation@2",
					"when": "activeWebviewPanelId == claude-dev.TabPanelProvider"
				},
				{
					"command": "cline.historyButtonClicked",
					"group": "navigation@3",
					"when": "activeWebviewPanelId == claude-dev.TabPanelProvider"
				},
				{
					"command": "cline.popoutButtonClicked",
					"group": "navigation@4",
					"when": "activeWebviewPanelId == claude-dev.TabPanelProvider"
				},
				{
					"command": "cline.accountButtonClicked",
					"group": "navigation@5",
					"when": "activeWebviewPanelId == claude-dev.TabPanelProvider"
				},
				{
					"command": "cline.settingsButtonClicked",
					"group": "navigation@6",
					"when": "activeWebviewPanelId == claude-dev.TabPanelProvider"
				}
			],
			"editor/context": [
				{
					"command": "cline.addToChat",
					"group": "navigation",
					"when": "editorHasSelection"
				}
			],
			"terminal/context": [
				{
					"command": "cline.addTerminalOutputToChat",
					"group": "navigation"
				}
			],
			"scm/title": [
				{
					"command": "cline.generateGitCommitMessage",
					"group": "navigation",
					"when": "config.git.enabled && scmProvider == git && !cline.isGeneratingCommit"
				},
				{
					"command": "cline.abortGitCommitMessage",
					"group": "navigation",
					"when": "config.git.enabled && scmProvider == git && cline.isGeneratingCommit"
				}
			],
			"commandPalette": [
				{
					"command": "cline.generateGitCommitMessage",
					"when": "config.git.enabled && scmProvider == git && !cline.isGeneratingCommit"
				},
				{
					"command": "cline.abortGitCommitMessage",
					"when": "config.git.enabled && scmProvider == git && cline.isGeneratingCommit"
				}
			]
		},
		"configuration": {
			"title": "Cline",
			"properties": {}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"compile": "npm run check-types && npm run lint && node esbuild.mjs",
		"compile-standalone": "npm run check-types && npm run lint && node esbuild.mjs --standalone",
		"postcompile-standalone": "node scripts/package-standalone.mjs",
		"watch": "npm-run-all -p watch:*",
		"watch:esbuild": "node esbuild.mjs --watch",
		"watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
		"package": "npm run check-types && npm run build:webview && npm run lint && node esbuild.mjs --production",
		"protos": "node scripts/build-proto.mjs",
		"postprotos": "prettier src/shared/proto src/core/controller src/hosts/ webview-ui/src/services src/generated --write --log-level warn",
		"clean": "rimraf dist dist-standalone webview-ui/build src/generated out/",
		"compile-tests": "node ./scripts/build-tests.js",
		"watch-tests": "tsc -p . -w --outDir out",
		"check-types": "npm run protos && npx tsc --noEmit && cd webview-ui && npx tsc -b --noEmit",
		"lint": "eslint src --ext ts && eslint webview-ui/src --ext ts && buf lint && cd webview-ui && npm run lint",
		"format": "prettier . --check",
		"format:fix": "prettier . --write",
		"pretest": "npm run compile && npm run compile-tests && npm run compile-standalone && npm run lint",
		"test": "npm-run-all test:unit test:integration",
		"test:ci": "node scripts/test-ci.js",
		"test:integration": "vscode-test",
		"test:unit": "TS_NODE_PROJECT='./tsconfig.unit-test.json' mocha",
		"test:coverage": "vscode-test --coverage",
		"e2e": "playwright test -c playwright.config.ts",
		"test:e2e": "playwright install && vsce package --no-dependencies --out dist/e2e.vsix && node src/test/e2e/utils/build.js && playwright test",
		"test:e2e:optimal": "vsce package --no-dependencies --out dist/e2e.vsix && node src/test/e2e/utils/build.js && playwright test",
		"install:all": "npm install && cd webview-ui && npm install",
		"dev:webview": "cd webview-ui && npm run dev",
		"build:webview": "cd webview-ui && npm run build",
		"test:webview": "cd webview-ui && npm run test",
		"publish:marketplace": "vsce publish && ovsx publish",
		"publish:marketplace:prerelease": "vsce publish --pre-release && ovsx publish --pre-release",
		"prepare": "husky",
		"changeset": "changeset",
		"version-packages": "changeset version",
		"docs": "cd docs && npm run dev",
		"docs:check-links": "cd docs && npm run check",
		"docs:rename-file": "cd docs && npm run rename",
		"report-issue": "node scripts/report-issue.js"
	},
	"lint-staged": {
		"*": [
			"prettier --write --ignore-unknown --log-level=log"
		]
	},
	"workspaces": ["packages/extension", "packages/dependencys"]
}
