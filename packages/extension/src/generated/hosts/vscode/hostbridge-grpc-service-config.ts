// GENERATED CODE -- DO NOT EDIT!
// Generated by scripts/generate-host-bridge-client.mjs
import { createServiceRegistry } from "../../../hosts/vscode/hostbridge-grpc-service"
import { HostServiceHandlerConfig } from "../../../hosts/vscode/hostbridge-grpc-handler"

import { openDiff } from "../../../hosts/vscode/hostbridge/diff/openDiff"
import { getDocumentText } from "../../../hosts/vscode/hostbridge/diff/getDocumentText"
import { replaceText } from "../../../hosts/vscode/hostbridge/diff/replaceText"
import { scrollDiff } from "../../../hosts/vscode/hostbridge/diff/scrollDiff"
import { truncateDocument } from "../../../hosts/vscode/hostbridge/diff/truncateDocument"
import { saveDocument } from "../../../hosts/vscode/hostbridge/diff/saveDocument"
import { closeDiff } from "../../../hosts/vscode/hostbridge/diff/closeDiff"

import { clipboardWriteText } from "../../../hosts/vscode/hostbridge/env/clipboardWriteText"
import { clipboardReadText } from "../../../hosts/vscode/hostbridge/env/clipboardReadText"

import { subscribeToFile } from "../../../hosts/vscode/hostbridge/watch/subscribeToFile"

import { showTextDocument } from "../../../hosts/vscode/hostbridge/window/showTextDocument"
import { showOpenDialogue } from "../../../hosts/vscode/hostbridge/window/showOpenDialogue"
import { showMessage } from "../../../hosts/vscode/hostbridge/window/showMessage"
import { showInputBox } from "../../../hosts/vscode/hostbridge/window/showInputBox"
import { showSaveDialog } from "../../../hosts/vscode/hostbridge/window/showSaveDialog"
import { openFile } from "../../../hosts/vscode/hostbridge/window/openFile"
import { getOpenTabs } from "../../../hosts/vscode/hostbridge/window/getOpenTabs"
import { getVisibleTabs } from "../../../hosts/vscode/hostbridge/window/getVisibleTabs"

import { getWorkspacePaths } from "../../../hosts/vscode/hostbridge/workspace/getWorkspacePaths"
import { saveOpenDocumentIfDirty } from "../../../hosts/vscode/hostbridge/workspace/saveOpenDocumentIfDirty"

// Setup diff service registry
const diffServiceRegistry = createServiceRegistry("diff")
diffServiceRegistry.registerMethod("openDiff", openDiff)
diffServiceRegistry.registerMethod("getDocumentText", getDocumentText)
diffServiceRegistry.registerMethod("replaceText", replaceText)
diffServiceRegistry.registerMethod("scrollDiff", scrollDiff)
diffServiceRegistry.registerMethod("truncateDocument", truncateDocument)
diffServiceRegistry.registerMethod("saveDocument", saveDocument)
diffServiceRegistry.registerMethod("closeDiff", closeDiff)

// Setup env service registry
const envServiceRegistry = createServiceRegistry("env")
envServiceRegistry.registerMethod("clipboardWriteText", clipboardWriteText)
envServiceRegistry.registerMethod("clipboardReadText", clipboardReadText)

// Setup watch service registry
const watchServiceRegistry = createServiceRegistry("watch")
watchServiceRegistry.registerMethod("subscribeToFile", subscribeToFile, { isStreaming: true })

// Setup window service registry
const windowServiceRegistry = createServiceRegistry("window")
windowServiceRegistry.registerMethod("showTextDocument", showTextDocument)
windowServiceRegistry.registerMethod("showOpenDialogue", showOpenDialogue)
windowServiceRegistry.registerMethod("showMessage", showMessage)
windowServiceRegistry.registerMethod("showInputBox", showInputBox)
windowServiceRegistry.registerMethod("showSaveDialog", showSaveDialog)
windowServiceRegistry.registerMethod("openFile", openFile)
windowServiceRegistry.registerMethod("getOpenTabs", getOpenTabs)
windowServiceRegistry.registerMethod("getVisibleTabs", getVisibleTabs)

// Setup workspace service registry
const workspaceServiceRegistry = createServiceRegistry("workspace")
workspaceServiceRegistry.registerMethod("getWorkspacePaths", getWorkspacePaths)
workspaceServiceRegistry.registerMethod("saveOpenDocumentIfDirty", saveOpenDocumentIfDirty)

/**
 * Map of host service names to their handler configurations
 */
export const hostServiceHandlers: Record<string, HostServiceHandlerConfig> = {
	"host.DiffService": {
		requestHandler: diffServiceRegistry.handleRequest,
		streamingHandler: diffServiceRegistry.handleStreamingRequest,
	},
	"host.EnvService": {
		requestHandler: envServiceRegistry.handleRequest,
		streamingHandler: envServiceRegistry.handleStreamingRequest,
	},
	"host.WatchService": {
		requestHandler: watchServiceRegistry.handleRequest,
		streamingHandler: watchServiceRegistry.handleStreamingRequest,
	},
	"host.WindowService": {
		requestHandler: windowServiceRegistry.handleRequest,
		streamingHandler: windowServiceRegistry.handleStreamingRequest,
	},
	"host.WorkspaceService": {
		requestHandler: workspaceServiceRegistry.handleRequest,
		streamingHandler: workspaceServiceRegistry.handleStreamingRequest,
	},
}
