import * as vscode from "vscode";
import { Anthropic } from "../../anthropic-ai/sdk";
import { ClineMessage } from "../../shared/ExtensionMessage";
import { TaskMetadata } from "../context/context-tracking/ContextTrackerTypes";
export declare const GlobalFileNames: {
    apiConversationHistory: string;
    contextHistory: string;
    uiMessages: string;
    openRouterModels: string;
    groqModels: string;
    basetenModels: string;
    mcpSettings: string;
    clineRules: string;
    workflows: string;
    cursorRulesDir: string;
    cursorRulesFile: string;
    windsurfRules: string;
    taskMetadata: string;
};
export declare function getDocumentsPath(): Promise<string>;
export declare function ensureTaskDirectoryExists(context: vscode.ExtensionContext, taskId: string): Promise<string>;
export declare function ensureRulesDirectoryExists(): Promise<string>;
export declare function ensureWorkflowsDirectoryExists(): Promise<string>;
export declare function ensureMcpServersDirectoryExists(): Promise<string>;
export declare function ensureSettingsDirectoryExists(context: vscode.ExtensionContext): Promise<string>;
export declare function getSavedApiConversationHistory(context: vscode.ExtensionContext, taskId: string): Promise<Anthropic.MessageParam[]>;
export declare function saveApiConversationHistory(context: vscode.ExtensionContext, taskId: string, apiConversationHistory: Anthropic.MessageParam[]): Promise<void>;
export declare function getSavedClineMessages(context: vscode.ExtensionContext, taskId: string): Promise<ClineMessage[]>;
export declare function saveClineMessages(context: vscode.ExtensionContext, taskId: string, uiMessages: ClineMessage[]): Promise<void>;
export declare function getTaskMetadata(context: vscode.ExtensionContext, taskId: string): Promise<TaskMetadata>;
export declare function saveTaskMetadata(context: vscode.ExtensionContext, taskId: string, metadata: TaskMetadata): Promise<void>;
