import * as vscode from "vscode";
import { Mode, OpenaiReasoningEffort } from "../../shared/storage/types";
import { GlobalStateKey, LocalStateKey, SecretKey } from "./state-keys";
import { ApiProvider, ModelInfo } from "../../shared/api";
import { HistoryItem } from "../../shared/HistoryItem";
import { AutoApprovalSettings } from "../../shared/AutoApprovalSettings";
import { TelemetrySetting } from "../../shared/TelemetrySetting";
import { UserInfo } from "../../shared/UserInfo";
import { ClineRulesToggles } from "../../shared/cline-rules";
import { McpDisplayMode } from "../../shared/McpDisplayMode";
import { Controller } from "../controller";
export declare function updateGlobalState(context: vscode.ExtensionContext, key: GlobalStateKey, value: any): Promise<void>;
export declare function getGlobalState(context: vscode.ExtensionContext, key: GlobalStateKey): Promise<any>;
export declare function updateGlobalStateBatch(context: vscode.ExtensionContext, updates: Record<string, any>): Promise<void>;
export declare function updateSecretsBatch(context: vscode.ExtensionContext, updates: Record<string, string | undefined>): Promise<void>;
export declare function storeSecret(context: vscode.ExtensionContext, key: SecretKey, value?: string): Promise<void>;
export declare function getSecret(context: vscode.ExtensionContext, key: SecretKey): Promise<string | undefined>;
export declare function updateWorkspaceState(context: vscode.ExtensionContext, key: LocalStateKey, value: any): Promise<void>;
export declare function getWorkspaceState(context: vscode.ExtensionContext, key: LocalStateKey): Promise<any>;
export declare function getAllExtensionState(context: vscode.ExtensionContext): Promise<{
    apiConfiguration: {
        apiKey: string | undefined;
        openRouterApiKey: string | undefined;
        clineAccountId: string | undefined;
        claudeCodePath: string | undefined;
        awsAccessKey: string | undefined;
        awsSecretKey: string | undefined;
        awsSessionToken: string | undefined;
        awsRegion: string | undefined;
        awsUseCrossRegionInference: boolean | undefined;
        awsBedrockUsePromptCache: boolean | undefined;
        awsBedrockEndpoint: string | undefined;
        awsProfile: string | undefined;
        awsBedrockApiKey: string | undefined;
        awsUseProfile: boolean | undefined;
        awsAuthentication: string | undefined;
        vertexProjectId: string | undefined;
        vertexRegion: string | undefined;
        openAiBaseUrl: string | undefined;
        openAiApiKey: string | undefined;
        openAiHeaders: Record<string, string>;
        ollamaBaseUrl: string | undefined;
        ollamaApiOptionsCtxNum: string | undefined;
        lmStudioBaseUrl: string | undefined;
        anthropicBaseUrl: string | undefined;
        geminiApiKey: string | undefined;
        geminiBaseUrl: string | undefined;
        openAiNativeApiKey: string | undefined;
        deepSeekApiKey: string | undefined;
        requestyApiKey: string | undefined;
        togetherApiKey: string | undefined;
        qwenApiKey: string | undefined;
        qwenApiLine: string | undefined;
        moonshotApiLine: string | undefined;
        doubaoApiKey: string | undefined;
        mistralApiKey: string | undefined;
        azureApiVersion: string | undefined;
        openRouterProviderSorting: string | undefined;
        liteLlmBaseUrl: string | undefined;
        liteLlmApiKey: string | undefined;
        liteLlmUsePromptCache: boolean | undefined;
        fireworksApiKey: string | undefined;
        fireworksModelMaxCompletionTokens: number | undefined;
        fireworksModelMaxTokens: number | undefined;
        asksageApiKey: string | undefined;
        asksageApiUrl: string | undefined;
        xaiApiKey: string | undefined;
        sambanovaApiKey: string | undefined;
        cerebrasApiKey: string | undefined;
        groqApiKey: string | undefined;
        basetenApiKey: string | undefined;
        moonshotApiKey: string | undefined;
        nebiusApiKey: string | undefined;
        favoritedModelIds: string[] | undefined;
        requestTimeoutMs: number | undefined;
        sapAiCoreClientId: string | undefined;
        sapAiCoreClientSecret: string | undefined;
        sapAiCoreBaseUrl: string | undefined;
        sapAiCoreTokenUrl: string | undefined;
        sapAiResourceGroup: string | undefined;
        huggingFaceApiKey: string | undefined;
        huaweiCloudMaasApiKey: string | undefined;
        planModeApiProvider: ApiProvider;
        planModeApiModelId: string | undefined;
        planModeThinkingBudgetTokens: number | undefined;
        planModeReasoningEffort: string | undefined;
        planModeVsCodeLmModelSelector: vscode.LanguageModelChatSelector | undefined;
        planModeAwsBedrockCustomSelected: boolean | undefined;
        planModeAwsBedrockCustomModelBaseId: "anthropic.claude-sonnet-4-20250514-v1:0" | "anthropic.claude-opus-4-20250514-v1:0" | "amazon.nova-premier-v1:0" | "amazon.nova-pro-v1:0" | "amazon.nova-lite-v1:0" | "amazon.nova-micro-v1:0" | "anthropic.claude-3-7-sonnet-20250219-v1:0" | "anthropic.claude-3-5-sonnet-20241022-v2:0" | "anthropic.claude-3-5-haiku-20241022-v1:0" | "anthropic.claude-3-5-sonnet-20240620-v1:0" | "anthropic.claude-3-opus-20240229-v1:0" | "anthropic.claude-3-sonnet-20240229-v1:0" | "anthropic.claude-3-haiku-20240307-v1:0" | "deepseek.r1-v1:0" | undefined;
        planModeOpenRouterModelId: string | undefined;
        planModeOpenRouterModelInfo: ModelInfo | undefined;
        planModeOpenAiModelId: string | undefined;
        planModeOpenAiModelInfo: ModelInfo | undefined;
        planModeOllamaModelId: string | undefined;
        planModeLmStudioModelId: string | undefined;
        planModeLiteLlmModelId: string | undefined;
        planModeLiteLlmModelInfo: ModelInfo | undefined;
        planModeRequestyModelId: string | undefined;
        planModeRequestyModelInfo: ModelInfo | undefined;
        planModeTogetherModelId: string | undefined;
        planModeFireworksModelId: string | undefined;
        planModeSapAiCoreModelId: string | undefined;
        planModeGroqModelId: string | undefined;
        planModeGroqModelInfo: ModelInfo | undefined;
        planModeBasetenModelId: string | undefined;
        planModeBasetenModelInfo: ModelInfo | undefined;
        planModeHuggingFaceModelId: string | undefined;
        planModeHuggingFaceModelInfo: ModelInfo | undefined;
        planModeHuaweiCloudMaasModelId: string | undefined;
        planModeHuaweiCloudMaasModelInfo: ModelInfo | undefined;
        actModeApiProvider: ApiProvider;
        actModeApiModelId: string | undefined;
        actModeThinkingBudgetTokens: number | undefined;
        actModeReasoningEffort: string | undefined;
        actModeVsCodeLmModelSelector: vscode.LanguageModelChatSelector | undefined;
        actModeAwsBedrockCustomSelected: boolean | undefined;
        actModeAwsBedrockCustomModelBaseId: "anthropic.claude-sonnet-4-20250514-v1:0" | "anthropic.claude-opus-4-20250514-v1:0" | "amazon.nova-premier-v1:0" | "amazon.nova-pro-v1:0" | "amazon.nova-lite-v1:0" | "amazon.nova-micro-v1:0" | "anthropic.claude-3-7-sonnet-20250219-v1:0" | "anthropic.claude-3-5-sonnet-20241022-v2:0" | "anthropic.claude-3-5-haiku-20241022-v1:0" | "anthropic.claude-3-5-sonnet-20240620-v1:0" | "anthropic.claude-3-opus-20240229-v1:0" | "anthropic.claude-3-sonnet-20240229-v1:0" | "anthropic.claude-3-haiku-20240307-v1:0" | "deepseek.r1-v1:0" | undefined;
        actModeOpenRouterModelId: string | undefined;
        actModeOpenRouterModelInfo: ModelInfo | undefined;
        actModeOpenAiModelId: string | undefined;
        actModeOpenAiModelInfo: ModelInfo | undefined;
        actModeOllamaModelId: string | undefined;
        actModeLmStudioModelId: string | undefined;
        actModeLiteLlmModelId: string | undefined;
        actModeLiteLlmModelInfo: ModelInfo | undefined;
        actModeRequestyModelId: string | undefined;
        actModeRequestyModelInfo: ModelInfo | undefined;
        actModeTogetherModelId: string | undefined;
        actModeFireworksModelId: string | undefined;
        actModeSapAiCoreModelId: string | undefined;
        actModeGroqModelId: string | undefined;
        actModeGroqModelInfo: ModelInfo | undefined;
        actModeBasetenModelId: string | undefined;
        actModeBasetenModelInfo: ModelInfo | undefined;
        actModeHuggingFaceModelId: string | undefined;
        actModeHuggingFaceModelInfo: ModelInfo | undefined;
        actModeHuaweiCloudMaasModelId: string | undefined;
        actModeHuaweiCloudMaasModelInfo: ModelInfo | undefined;
    };
    isNewUser: boolean;
    welcomeViewCompleted: boolean | undefined;
    lastShownAnnouncementId: string | undefined;
    taskHistory: HistoryItem[] | undefined;
    autoApprovalSettings: AutoApprovalSettings;
    globalClineRulesToggles: ClineRulesToggles;
    browserSettings: {
        viewport: {
            width: number;
            height: number;
        };
        remoteBrowserHost?: string;
        remoteBrowserEnabled?: boolean;
        chromeExecutablePath?: string;
        disableToolUse?: boolean;
    };
    preferredLanguage: string;
    openaiReasoningEffort: OpenaiReasoningEffort;
    mode: Mode;
    strictPlanModeEnabled: boolean;
    userInfo: UserInfo | undefined;
    mcpMarketplaceEnabled: boolean;
    mcpDisplayMode: McpDisplayMode;
    mcpResponsesCollapsed: boolean;
    telemetrySetting: TelemetrySetting;
    planActSeparateModelsSetting: boolean;
    enableCheckpointsSetting: boolean;
    shellIntegrationTimeout: number;
    terminalReuseEnabled: boolean;
    terminalOutputLineLimit: number;
    defaultTerminalProfile: string;
    globalWorkflowToggles: ClineRulesToggles;
    localClineRulesToggles: ClineRulesToggles;
    localWindsurfRulesToggles: ClineRulesToggles;
    localCursorRulesToggles: ClineRulesToggles;
    localWorkflowToggles: ClineRulesToggles;
}>;
export declare function resetWorkspaceState(controller: Controller): Promise<void>;
export declare function resetGlobalState(controller: Controller): Promise<void>;
